# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zcFBlSuSqjIBizbggpjmgZ0PIylUQFQF
"""

!pip install streamlit
import streamlit as st
import pandas as pd
import numpy as np
import joblib

# Load the trained model
from google.colab import files
uploaded = files.upload()
model = joblib.load('logistic_regression_model.pkl')

# Function to make predictions
def predict_survival(sex, age, sibsp, parch, fare, embarked, pclass, cabin):
    # Encode categorical variables as done during training
    sex = 1 if sex == 'Male' else 0
    embarked = {'C': 0, 'Q': 1, 'S': 2}.get(embarked, 2)  # Default to 'S'
    cabin = 1 if cabin == 'Known' else 0
    # Create a dataframe for prediction
    input_data = pd.DataFrame({
        'Pclass': [pclass],
        'Sex': [sex],
        'Age': [age],
        'SibSp': [sibsp],
        'Parch': [parch],
        'Fare': [fare],
        'Embarked': [embarked],
        'Cabin': [cabin]
    })
    # Make prediction
    prediction = model.predict(input_data)[0]
    probability = model.predict_proba(input_data)[0][1]
    return prediction, probability

# Streamlit app
st.title('Titanic Survival Prediction')

# Input fields
sex = st.selectbox('Sex', ['Male', 'Female'])
age = st.slider('Age', 0, 100, 25)
sibsp = st.number_input('Number of Siblings/Spouses Aboard', min_value=0, max_value=10, value=0)
parch = st.number_input('Number of Parents/Children Aboard', min_value=0, max_value=10, value=0)
fare = st.number_input('Fare', min_value=0.0, max_value=600.0, value=50.0)
embarked = st.selectbox('Port of Embarkation', ['C', 'Q', 'S'])
pclass = st.selectbox('Passenger Class', [1, 2, 3])
cabin = st.selectbox('Cabin', ['Known', 'Unknown'])

# Make prediction
if st.button('Predict'):
    prediction, probability = predict_survival(sex, age, sibsp, parch, fare, embarked, pclass, cabin)
    if prediction == 1:
        st.success(f'The model predicts that the passenger survived with a probability of {probability:.2f}')
    else:
        st.error(f'The model predicts that the passenger did not survive with a probability of {probability:.2f}')

# Run the app with: streamlit run app.py

